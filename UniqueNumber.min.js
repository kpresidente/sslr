var uniqueNum=new function(t){return{createRecord:async function(r){try{Knack.showSpinner();const n=await e(t);r[FLD[void 0].Number]=n;const a=await db(t).create(r);return Knack.hideSpinner(),a}catch(t){const e=TBL[view.source.object].attributes.inflections.singular;MsgBox(`Error creating the ${e}!`,t)}},getNumber:e,setNumber:async function(t){try{Knack.showSpinner();const r=t.source.object,n=FLD[r].Number,a=await e(r),i=dv(t).setValue(n,a);return Knack.hideSpinner(),i}catch(e){const r=TBL[t.source.object].attributes.inflections.singular;MsgBox(`Error setting the ${r} Number!`,e)}}};async function e(t){try{let n={length:!0};for(var e=1;e<=10&&n.length;e++){var r=String(Math.floor(9e5*Math.random()+1e5));n=await db(t).filter(FLD[t].Number,"is",r).filter(FLD[t].Exists,"is",1).get().then((t=>t.data))}if(e>10&&n.length)throw"Too many trials!";return r}catch(t){return Promise.reject(t)}}};