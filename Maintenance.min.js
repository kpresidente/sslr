const maintenance={abbreviateAddresses:abbreviateAddresses,updateKeys:updateKeys,createAllShares:createAllShares,fixProjectFolders:fixProjectFolders};function abbreviateAddresses(e){const a={Alabama:"AL",Alaska:"AK",Arizona:"AZ",Arkansas:"AR",California:"CA",Colorado:"CO",Connecticut:"CT",Delaware:"DE",District_of_Columbia:"DC",Florida:"FL",Georgia:"GA",Hawaii:"HI",Idaho:"ID",Illinois:"IL",Indiana:"IN",Iowa:"IA",Kansa:"KS",Kentucky:"KY",Lousiana:"LA",Maine:"ME",Maryland:"MD",Massachusetts:"MA",Michigan:"MI",Minnesota:"MN",Mississippi:"MS",Missouri:"MO",Montana:"MT",Nebraska:"NE",Nevada:"NV",New_Hampshire:"NH",New_Jersey:"NJ",New_Mexico:"NM",New_York:"NY",North_Carolina:"NC",North_Dakota:"ND",Ohio:"OH",Oklahoma:"OK",Oregon:"OR",Pennsylvania:"PA",Rhode_Island:"RI",South_Carolina:"SC",South_Dakota:"SD",Tennessee:"TN",Texas:"TX",Utah:"UT",Vermont:"VT",Virginia:"VA",Washington:"WA",West_Virginia:"WV",Wisconsin:"WI",Wyoming:"WY"}((()=>{var a=e.map((e=>!!TBL.info(e).fields.models.filter((e=>"address"==e.attributes.type)).length&&db(e).get())).filter((e=>0!=e));return Promise.all(a)}))().then((e=>{var t=e.map((e=>e.data));return[].concat(...t).map((e=>{var t=Object.keys(e).filter((e=>{try{return"address"==FLD.info(e).attributes.type}catch(e){return!1}})).map((t=>{var r=(sub(e,t,"state")||"").trim().replace(" ","_"),s=r in a&&a[r];return!!s&&{[t]:{street:sub(e,t,"street")||"",street2:sub(e,t,"street2")||"",city:sub(e,t,"city")||"",state:s||"",zip:sub(e,t,"zip")||""}}})).filter((e=>!1!==e));if(t.length){var r={};return t.forEach((e=>{Object.assign(r,e)})),{table:FLD.info(Object.keys(r)[0]).attributes.object_key,key:e.id,payload:r}}return!1})).filter((e=>0!=e))})).then((e=>{var a={};function t(e,r,s){db(e).key(r).update(s).then((()=>{})).catch((()=>{`${e}.${r}`in a?a[`${e}.${r}`]++:a[`${e}.${r}`]=1,a[`${e}.${r}`]<10&&t(e,r,s)}))}e.forEach((e=>{t(e.table,e.key,e.payload)}))}))}async function updateKeys(e,a){var t=1,r=e.map((e=>(t++,db(e).filter(FLD[e].Key,"is blank").get())));async function s(e,a,r=1){t++;try{return await db(e).key(a).update({[FLD[e].Key]:a})}catch(t){if(r<10)return s(e,a,r++)}}tableRecs=await Promise.all(r),r.map(((e,a)=>e.data.map((e=>({table:table[a],key:e.id}))))).flat().map((e=>{if(t>a)throw`Script cancelled! Using too many API calls (${t} of ${a}). Try again tomorrow.`;return s(table,record.id)}))}async function fixProjectFolders(){let e=["/projects","/maintenance/archived"].map((e=>pf().getFolderContents(e)));e=await Promise.all(e),e=e.flat().filter((e=>"folder"==e[".tag"]));let a=await db(TBL.Projects).get();a=a.data;let t=e.filter((e=>{let t=a.any((a=>a[FLD.Projects.FolderPath].toLowerCase()==e.path_lower)),r=e.path_lower.startsWith("_");return t&&!r})).map((e=>({from_path:e.path_display,to_path:e.path_display.replace(e.name,`_${e.name}`)}))),r=new Promise((async e=>{if(t.length){let a=new Dropbox.Dropbox({accessToken:"bYsAjnjg6cQAAAAAAAA4iN2lniNH91qM_98WNh8_iTuT8L9gZT_u-oApgv4GlBcs"}),r=(await a.filesMoveBatchV2({entries:t,autorename:!0}),setInterval((async()=>{let t=await a.moveBatchCheckV2(t);"complete"in t&&(clearInterval(r),e(t))}),5e3))}else e([])})),s=[],i=a.filter((a=>(folderMissing=!e.find((e=>e.path_lower==a[FLD.Projects.FolderPath].toLowerCase())),projectExists=1==a[FLD.Projects.Exists],projectExists&&folderMissing)));return i.forEach((e=>{s.push(pf({source:{object:TBL.Projects}}).create(e))})),i=i.map((e=>e[FLD.Projects.FolderPath])),s=await Promise.all(s),{missing:{folders:i,projects:missingProjects},fixes:{createdFolders:s,renamedFolders:r}}}async function createAllShares(){const e=[],a=[],t=await db(TBL.Projects).filter(FLD.Status,"is","Installing").get().then((e=>e.data));for(rec of t){window.confirm(`Create shared folder for ${rec[FLD.Projects.Name]} - ${rec[FLD.Projects.Number]}?`)&&(window.sleep(1e3),await pf().createShared(record).then((e=>a.push(id))).catch((a=>e.push(id))))}}async function duplicateNumbers(e){if(e=e||Knack.objects.map((e=>e.key)),!1 in FLD[e])return"table has no number field!";response=await db(e).get(),duplicates=response.data.filter((e=>(duplicate=response.data.some((a=>a[[FLD].Number]==e[[FLD].Number])),duplicates.length)))}